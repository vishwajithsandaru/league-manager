POST /premier/create-season/:season                         controllers.PremierLeagueController.createSeason(season: String, request: Request)
GET /premier/list-seasons                                   controllers.PremierLeagueController.listSeasons(request: Request)
POST /premier/create-club/:season                           controllers.PremierLeagueController.createPremierLeagueClub(season: String, request: Request)
DELETE /premier/delete-club/:season                         controllers.PremierLeagueController.deletePremietLeagueClub(season: String, name: String, request: Request)
GET /premier/display-club-stats/:season                     controllers.PremierLeagueController.displayStatsPremierLeagueClub(season: String, name: String, request: Request)
GET /premier/display-league-table/:season                   controllers.PremierLeagueController.displayPremierLeagueTable(season: String, request: Request)
POST /premier/add-match/:season                             controllers.PremierLeagueController.addMatch(season: String, request: Request)
PUT /premier/test-load/:season                              controllers.PremierLeagueController.testLoad(season: String, request: Request)
GET /premier/get-clubs/:season                              controllers.PremierLeagueController.getFootballClubs(season: String, request: Request)
POST /premier/load-state                                    controllers.PremierLeagueController.loadState(request: Request)
POST /premier/save-state                                    controllers.PremierLeagueController.saveState(request: Request)

POST /university/create-season/:season                      controllers.UniversityLeagueController.createSeason(season: String, request: Request)
GET /university/list-seasons                                controllers.UniversityLeagueController.listSeasons(request: Request)
POST /university/create-club/:season                        controllers.UniversityLeagueController.createPremierLeagueClub(season: String, request: Request)
DELETE /university/delete-club/:season                      controllers.UniversityLeagueController.deletePremietLeagueClub(season: String, name: String, request: Request)
GET /university/display-club-stats/:season                  controllers.UniversityLeagueController.displayStatsPremierLeagueClub(season: String, name: String, request: Request)
GET /university/display-league-table/:season                controllers.UniversityLeagueController.displayPremierLeagueTable(season: String, request: Request)
POST /university/add-match/:season                          controllers.UniversityLeagueController.addMatch(season: String, request: Request)
PUT /university/test-load/:season                           controllers.UniversityLeagueController.testLoad(season: String, request: Request)
GET /university/get-clubs/:season                           controllers.UniversityLeagueController.getFootballClubs(season: String, request: Request)
POST /university/load-state                                 controllers.UniversityLeagueController.loadState(request: Request)
POST /university/save-state                                 controllers.UniversityLeagueController.saveState(request: Request)

POST /school/create-season/:season                          controllers.SchoolLeagueController.createSeason(season: String, request: Request)
GET /school/list-seasons                                    controllers.SchoolLeagueController.listSeasons(request: Request)
POST /school/create-club/:season                            controllers.SchoolLeagueController.createPremierLeagueClub(season: String, request: Request)
DELETE /school/delete-club/:season                          controllers.SchoolLeagueController.deletePremietLeagueClub(season: String, name: String, request: Request)
GET /school/display-club-stats/:season                      controllers.SchoolLeagueController.displayStatsPremierLeagueClub(season: String, name: String, request: Request)
GET /school/display-league-table/:season                    controllers.SchoolLeagueController.displayPremierLeagueTable(season: String, request: Request)
POST /school/add-match/:season                              controllers.SchoolLeagueController.addMatch(season: String, request: Request)
PUT /school/test-load/:season                               controllers.SchoolLeagueController.testLoad(season: String, request: Request)
GET /school/get-clubs/:season                               controllers.SchoolLeagueController.getFootballClubs(season: String, request: Request)
POST /school/load-state                                     controllers.SchoolLeagueController.loadState(request: Request)
POST /school/save-state                                     controllers.SchoolLeagueController.saveState(request: Request)

